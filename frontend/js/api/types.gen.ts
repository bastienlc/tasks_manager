// This file is auto-generated by @hey-api/openapi-ts

export type EmailChange = {
  email: string;
};

export type Login = {
  email: string;
  password: string;
};

export type Message = {
  message: string;
};

export type PaginatedTaskList = {
  count: number;
  next?: string | null;
  previous?: string | null;
  results: Array<Task>;
};

export type PaginatedUserList = {
  count: number;
  next?: string | null;
  previous?: string | null;
  results: Array<User>;
};

export type PasswordChange = {
  password: string;
};

export type PasswordReset = {
  email: string;
};

export type PasswordResetVerified = {
  code: string;
  password: string;
};

export type PatchedTask = {
  readonly id?: number;
  title?: string;
  description?: string;
  completed?: boolean;
  readonly created_at?: string;
  readonly updated_at?: string;
};

export type PatchedUser = {
  readonly id?: number;
  email?: string;
  /**
   * Designates whether this user should be treated as active.  Unselect this instead of deleting accounts.
   */
  is_active?: boolean;
  /**
   * Designates whether the user can log into this admin site.
   */
  is_staff?: boolean;
  /**
   * Designates that this user has all permissions without explicitly assigning them.
   */
  is_superuser?: boolean;
};

/**
 * Don't require email to be unique so visitor can signup multiple times,
 * if misplace verification email.  Handle in view.
 */
export type Signup = {
  email: string;
  password: string;
  first_name?: string;
  last_name?: string;
};

export type Task = {
  readonly id: number;
  title: string;
  description?: string;
  completed?: boolean;
  readonly created_at: string;
  readonly updated_at: string;
};

export type User = {
  readonly id: number;
  email: string;
  first_name?: string;
  last_name?: string;
};

export type AccountsEmailChangeCreateData = {
  requestBody: EmailChange;
};

export type AccountsEmailChangeCreateResponse = EmailChange;

export type AccountsEmailChangeFormattedCreateData = {
  format: ".json";
  requestBody: EmailChange;
};

export type AccountsEmailChangeFormattedCreateResponse = EmailChange;

export type AccountsEmailChangeVerifyRetrieveResponse = unknown;

export type AccountsEmailChangeVerifyFormattedRetrieveData = {
  format: ".json";
};

export type AccountsEmailChangeVerifyFormattedRetrieveResponse = unknown;

export type AccountsLoginCreateData = {
  requestBody: Login;
};

export type AccountsLoginCreateResponse = {
  token: string;
};

export type AccountsLoginFormattedCreateData = {
  format: ".json";
  requestBody: Login;
};

export type AccountsLoginFormattedCreateResponse = Login;

export type AccountsLogoutRetrieveResponse = unknown;

export type AccountsLogoutFormattedRetrieveData = {
  format: ".json";
};

export type AccountsLogoutFormattedRetrieveResponse = unknown;

export type AccountsPasswordChangeCreateData = {
  requestBody: PasswordChange;
};

export type AccountsPasswordChangeCreateResponse = PasswordChange;

export type AccountsPasswordChangeFormattedCreateData = {
  format: ".json";
  requestBody: PasswordChange;
};

export type AccountsPasswordChangeFormattedCreateResponse = PasswordChange;

export type AccountsPasswordResetCreateData = {
  requestBody: PasswordReset;
};

export type AccountsPasswordResetCreateResponse = PasswordReset;

export type AccountsPasswordResetFormattedCreateData = {
  format: ".json";
  requestBody: PasswordReset;
};

export type AccountsPasswordResetFormattedCreateResponse = PasswordReset;

export type AccountsPasswordResetVerifiedCreateData = {
  requestBody: PasswordResetVerified;
};

export type AccountsPasswordResetVerifiedCreateResponse = PasswordResetVerified;

export type AccountsPasswordResetVerifiedFormattedCreateData = {
  format: ".json";
  requestBody: PasswordResetVerified;
};

export type AccountsPasswordResetVerifiedFormattedCreateResponse =
  PasswordResetVerified;

export type AccountsPasswordResetVerifyRetrieveResponse = unknown;

export type AccountsPasswordResetVerifyFormattedRetrieveData = {
  format: ".json";
};

export type AccountsPasswordResetVerifyFormattedRetrieveResponse = unknown;

export type AccountsSignupCreateData = {
  requestBody: Signup;
};

export type AccountsSignupCreateResponse = Signup;

export type AccountsSignupFormattedCreateData = {
  format: ".json";
  requestBody: Signup;
};

export type AccountsSignupFormattedCreateResponse = Signup;

export type AccountsSignupVerifyRetrieveResponse = unknown;

export type AccountsSignupVerifyFormattedRetrieveData = {
  format: ".json";
};

export type AccountsSignupVerifyFormattedRetrieveResponse = unknown;

export type AccountsUsersMeRetrieveResponse = User;

export type AccountsUsersMeFormattedRetrieveData = {
  format: ".json";
};

export type AccountsUsersMeFormattedRetrieveResponse = User;

export type RestRestCheckRetrieveResponse = Message;

export type TasksListData = {
  /**
   * Number of results to return per page.
   */
  limit?: number;
  /**
   * The initial index from which to return the results.
   */
  offset?: number;
};

export type TasksListResponse = PaginatedTaskList;

export type TasksCreateData = {
  requestBody: {
    title: string;
    description?: string;
    completed?: boolean;
  };
};

export type TasksCreateResponse = Task;

export type TasksRetrieveData = {
  id: number;
};

export type TasksRetrieveResponse = Task;

export type TasksUpdateData = {
  id: number;
  requestBody: {
    title: string;
    description?: string;
    completed?: boolean;
  }
};

export type TasksUpdateResponse = Task;

export type TasksPartialUpdateData = {
  id: number;
  requestBody?: PatchedTask;
};

export type TasksPartialUpdateResponse = Task;

export type TasksDestroyData = {
  id: number;
};

export type TasksDestroyResponse = void;

export type UsersListData = {
  /**
   * Number of results to return per page.
   */
  limit?: number;
  /**
   * The initial index from which to return the results.
   */
  offset?: number;
};

export type UsersListResponse = PaginatedUserList;

export type UsersCreateData = {
  requestBody: User;
};

export type UsersCreateResponse = User;

export type UsersRetrieveData = {
  /**
   * A unique integer value identifying this user.
   */
  id: number;
};

export type UsersRetrieveResponse = User;

export type UsersUpdateData = {
  /**
   * A unique integer value identifying this user.
   */
  id: number;
  requestBody: User;
};

export type UsersUpdateResponse = User;

export type UsersPartialUpdateData = {
  /**
   * A unique integer value identifying this user.
   */
  id: number;
  requestBody?: PatchedUser;
};

export type UsersPartialUpdateResponse = User;

export type UsersDestroyData = {
  /**
   * A unique integer value identifying this user.
   */
  id: number;
};

export type UsersDestroyResponse = void;

export type $OpenApiTs = {
  "/api/accounts/email/change/": {
    post: {
      req: AccountsEmailChangeCreateData;
      res: {
        200: EmailChange;
      };
    };
  };
  "/api/accounts/email/change{format}": {
    post: {
      req: AccountsEmailChangeFormattedCreateData;
      res: {
        200: EmailChange;
      };
    };
  };
  "/api/accounts/email/change/verify/": {
    get: {
      res: {
        /**
         * No response body
         */
        200: unknown;
      };
    };
  };
  "/api/accounts/email/change/verify{format}": {
    get: {
      req: AccountsEmailChangeVerifyFormattedRetrieveData;
      res: {
        /**
         * No response body
         */
        200: unknown;
      };
    };
  };
  "/api/accounts/login/": {
    post: {
      req: AccountsLoginCreateData;
      res: {
        200: Login;
      };
    };
  };
  "/api/accounts/login{format}": {
    post: {
      req: AccountsLoginFormattedCreateData;
      res: {
        200: Login;
      };
    };
  };
  "/api/accounts/logout/": {
    get: {
      res: {
        /**
         * No response body
         */
        200: unknown;
      };
    };
  };
  "/api/accounts/logout{format}": {
    get: {
      req: AccountsLogoutFormattedRetrieveData;
      res: {
        /**
         * No response body
         */
        200: unknown;
      };
    };
  };
  "/api/accounts/password/change/": {
    post: {
      req: AccountsPasswordChangeCreateData;
      res: {
        200: PasswordChange;
      };
    };
  };
  "/api/accounts/password/change{format}": {
    post: {
      req: AccountsPasswordChangeFormattedCreateData;
      res: {
        200: PasswordChange;
      };
    };
  };
  "/api/accounts/password/reset/": {
    post: {
      req: AccountsPasswordResetCreateData;
      res: {
        200: PasswordReset;
      };
    };
  };
  "/api/accounts/password/reset{format}": {
    post: {
      req: AccountsPasswordResetFormattedCreateData;
      res: {
        200: PasswordReset;
      };
    };
  };
  "/api/accounts/password/reset/verified/": {
    post: {
      req: AccountsPasswordResetVerifiedCreateData;
      res: {
        200: PasswordResetVerified;
      };
    };
  };
  "/api/accounts/password/reset/verified{format}": {
    post: {
      req: AccountsPasswordResetVerifiedFormattedCreateData;
      res: {
        200: PasswordResetVerified;
      };
    };
  };
  "/api/accounts/password/reset/verify/": {
    get: {
      res: {
        /**
         * No response body
         */
        200: unknown;
      };
    };
  };
  "/api/accounts/password/reset/verify{format}": {
    get: {
      req: AccountsPasswordResetVerifyFormattedRetrieveData;
      res: {
        /**
         * No response body
         */
        200: unknown;
      };
    };
  };
  "/api/accounts/signup/": {
    post: {
      req: AccountsSignupCreateData;
      res: {
        200: Signup;
      };
    };
  };
  "/api/accounts/signup{format}": {
    post: {
      req: AccountsSignupFormattedCreateData;
      res: {
        200: Signup;
      };
    };
  };
  "/api/accounts/signup/verify/": {
    get: {
      res: {
        /**
         * No response body
         */
        200: unknown;
      };
    };
  };
  "/api/accounts/signup/verify{format}": {
    get: {
      req: AccountsSignupVerifyFormattedRetrieveData;
      res: {
        /**
         * No response body
         */
        200: unknown;
      };
    };
  };
  "/api/accounts/users/me/": {
    get: {
      res: {
        200: User;
      };
    };
  };
  "/api/accounts/users/me{format}": {
    get: {
      req: AccountsUsersMeFormattedRetrieveData;
      res: {
        200: User;
      };
    };
  };
  "/api/rest/rest-check/": {
    get: {
      res: {
        200: Message;
      };
    };
  };
  "/api/tasks/": {
    get: {
      req: TasksListData;
      res: {
        200: PaginatedTaskList;
      };
    };
    post: {
      req: TasksCreateData;
      res: {
        201: Task;
      };
    };
  };
  "/api/tasks/{id}/": {
    get: {
      req: TasksRetrieveData;
      res: {
        200: Task;
      };
    };
    put: {
      req: TasksUpdateData;
      res: {
        200: Task;
      };
    };
    patch: {
      req: TasksPartialUpdateData;
      res: {
        200: Task;
      };
    };
    delete: {
      req: TasksDestroyData;
      res: {
        /**
         * No response body
         */
        204: void;
      };
    };
  };
  "/api/users/": {
    get: {
      req: UsersListData;
      res: {
        200: PaginatedUserList;
      };
    };
    post: {
      req: UsersCreateData;
      res: {
        201: User;
      };
    };
  };
  "/api/users/{id}/": {
    get: {
      req: UsersRetrieveData;
      res: {
        200: User;
      };
    };
    put: {
      req: UsersUpdateData;
      res: {
        200: User;
      };
    };
    patch: {
      req: UsersPartialUpdateData;
      res: {
        200: User;
      };
    };
    delete: {
      req: UsersDestroyData;
      res: {
        /**
         * No response body
         */
        204: void;
      };
    };
  };
};
